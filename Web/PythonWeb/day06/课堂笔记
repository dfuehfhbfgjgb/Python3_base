一、运算符
    1.赋值运算符

    2.算数运算符

    3.复合运算符

    4.自增/自减

    5.关系运算符
        “hello” > "abc"
        "10" > 2 //10>2
        "10" > "2" //"1">"2" false
        "abc" > 10 //NaN>10 false
    6.逻辑运算符
        用于表示表达式之间的关系，结果永远为布尔值。
        1）逻辑与 &&
            全1为1，只有表达式全部为true，最终结果才为true

        2）逻辑或 ||
            有1则1，只要有一个表达式成立，最终结果就为true
            练习：
                定义变量表示年份，判断是否是闰年。
                能被4整除，且不能被100整除，为
                能被400整除
        3）逻辑非 ！
            对布尔结果取反
            例：！5 --> false
    7.三目运算符
    语法：
        表达式1 ? 表示式2 : 表达式3;
        1成立执行2，不成立执行3.
        练习：
            1）分数判断
                弹框输入分数
                >= 90
                80~90
                60~80
                <60
            2）身体指数
                接收用户输入的身高m和体重kg
                bmi = 体重/（身高*身高）
                >= 24 偏胖，需减肥
                18.5 ～ 24 健康
                < 18.5 偏瘦亚健康，需增肥


二、流程控制
    1.控制代码的执行顺序和执行次数
    2.分类：
        1）顺序结构，从上到下依次执行
        2）选择结构，根据条件是否成立，选择执行某一段代码
        3）循环结构，根据条件是否成立，选择是否重复执行某段代码
    3.选择结构
        1）if语句
            1.基本结构
                if （条件表达式）{
                条件成立时执行
                }
            2.if-else语句
                if（条件）{
                条件成立时执行
                }else{
                条件不成立时执行
                }
            3.多重分支if-else-if
                if（条件1）{
                条件1成立时执行
                }else if（条件2）{
                条件2成立时执行
                }
                ...
                else{
                条件n不成立时执行
                }
        2）switch语句
            用于值的全等匹配
            语法：
                switch（变量）{
                    case 值1:
                        匹配全等之后执行的代码段
                        break;//结束匹配
                    case 值2：
                        匹配全等之后执行的代码段
                        break;//结束匹配
                    ...
                    default:
                        所有case都不匹配时执行的默认操作
                        break;
            特殊：
                1）break关键字可以省略，一旦省略，会从当前匹配到的case开始向后执行所有的代码语句。
                直到碰到break关键字结束匹配或执行到结束。


                }
                2）多个case共用代码段
                    case 值1：
                    case 值2：
                    ...
                        //任一case匹配全等后执行的操作
                        break；
                练习：
                    接收用户输入的年月日，计算当天是该年的第几天。
    4.循环结构
        控制代码的重复执行
        1）while循环
            语法：
                while (循环条件){
                    条件成立时执行，循环体
                    更新循环条件变量
                }
                先判断条件再执行循环体
        2）do-while循环
            语法：
                do{
                    循环体
                    更新循环变量
                }while(循环条件)
            先执行循环体再判断条件是否满足
        while与do-while区别：
            while：先判断条件再执行循环体
            do-while：先执行循环体再判断条件是否满足，
            无论条件满不满足条件，循环体至少执行一次
            练习：
                循环接收用户输入。输入“exit”表示退出，
                否则就在在控制台中打印输入内容。

        3）for循环
            语法：
                for(定义循环变量;循环条件;更新变量){
                    循环体
                }
        4）循环控制
            break：跳出循环
            continue：结束本次循环，开始下次循环

        5）循环嵌套
            在循环中嵌套添加其他的循环
            练习：
                99乘法表

            练习：
                打印：
                *
                **
                ***
                ****
                打印：
                   *
                  ***
                 *****
                *******
三、函数
    1.
    2.语法：
        1）函数声明
作业：
    接收用户输入的年月日，判断当日是星期几
    已知：1900.1.1/1990.1.1是星期一
    附加：
        要求主动能使用函数封装，使用按钮点击调用：